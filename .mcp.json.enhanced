{
  "mcpServers": {
    "filesystem": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-filesystem", "/home/w3bsuki/MCP-RAG-V4"],
      "description": "Secure filesystem operations"
    },
    "github": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-github"],
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "${GITHUB_TOKEN}"
      },
      "description": "GitHub operations"
    },
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7"],
      "env": {
        "UPSTASH_REDIS_REST_URL": "${UPSTASH_REDIS_REST_URL}",
        "UPSTASH_REDIS_REST_TOKEN": "${UPSTASH_REDIS_REST_TOKEN}"
      },
      "description": "Real-time documentation access"
    },
    "task-manager": {
      "command": "npx",
      "args": ["-y", "task-manager-mcp", "--db-path", "./shared/tasks.db"],
      "env": {
        "TASK_DB_PATH": "/home/w3bsuki/MCP-RAG-V4/shared/tasks.db"
      },
      "description": "Persistent task management"
    },
    "git-mcp": {
      "command": "npx",
      "args": ["-y", "git-mcp", "--repo-path", "/home/w3bsuki/MCP-RAG-V4"],
      "description": "Git operations"
    },
    "testing-tools": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-testing"],
      "description": "Testing capabilities"
    },
    "fetch": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-fetch"],
      "description": "HTTP requests"
    },
    "redis": {
      "command": "npx",
      "args": ["-y", "redis-mcp"],
      "env": {
        "REDIS_URL": "redis://localhost:6379"
      },
      "description": "Shared state management"
    },
    "rabbitmq": {
      "command": "npx",
      "args": ["-y", "rabbitmq-mcp"],
      "env": {
        "RABBITMQ_URL": "amqp://localhost:5672",
        "EXCHANGE_NAME": "mcp_agents"
      },
      "description": "Agent messaging"
    },
    "sqlite": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-sqlite", "--db-path", "./shared/agent_state.db"],
      "description": "Agent state persistence"
    },
    "knowledge-base": {
      "command": "/home/w3bsuki/MCP-RAG-V4/mcp-venv/bin/python",
      "args": ["/home/w3bsuki/MCP-RAG-V4/mcp-servers/knowledge-base-python/server.py"],
      "env": {
        "KNOWLEDGE_ROOT": "/home/w3bsuki/MCP-RAG-V4/rag-system/knowledge",
        "PYTHONPATH": "/home/w3bsuki/MCP-RAG-V4"
      },
      "description": "Knowledge storage"
    },
    "vector-search": {
      "command": "/home/w3bsuki/MCP-RAG-V4/mcp-venv/bin/python",
      "args": ["/home/w3bsuki/MCP-RAG-V4/mcp-servers/vector-search-python/server.py"],
      "env": {
        "QDRANT_URL": "http://localhost:6333",
        "EMBEDDING_MODEL": "sentence-transformers/all-MiniLM-L6-v2",
        "PYTHONPATH": "/home/w3bsuki/MCP-RAG-V4"
      },
      "description": "Semantic search"
    },
    "coordination-hub": {
      "command": "/home/w3bsuki/MCP-RAG-V4/mcp-venv/bin/python",
      "args": ["/home/w3bsuki/MCP-RAG-V4/mcp-servers/coordination-hub/server.py"],
      "env": {
        "SHARED_DIR": "/home/w3bsuki/MCP-RAG-V4/shared",
        "PYTHONPATH": "/home/w3bsuki/MCP-RAG-V4"
      },
      "description": "Agent coordination"
    }
  },
  "permissions": {
    "alwaysAllow": [
      "filesystem/read_file",
      "filesystem/list_directory",
      "vector-search/search",
      "knowledge-base/search",
      "coordination-hub/get_tasks",
      "task-manager/list_tasks",
      "task-manager/get_task",
      "testing-tools/run_tests",
      "testing-tools/lint_code",
      "fetch/fetch",
      "redis/get",
      "rabbitmq/receive",
      "sqlite/read",
      "context7/search",
      "git-mcp/status",
      "git-mcp/log",
      "git-mcp/diff"
    ],
    "requireConfirmation": [
      "filesystem/write_file",
      "filesystem/delete_file",
      "git-mcp/commit",
      "git-mcp/push",
      "git-mcp/reset",
      "testing-tools/security_scan",
      "github/create_pr",
      "github/merge_pr",
      "task-manager/create_task",
      "task-manager/update_task",
      "redis/set",
      "rabbitmq/send",
      "sqlite/write"
    ]
  },
  "agents": {
    "architect": {
      "workingDir": "./git-worktrees/architect",
      "allowedServers": [
        "filesystem",
        "vector-search",
        "knowledge-base",
        "coordination-hub",
        "github",
        "context7",
        "task-manager",
        "redis",
        "rabbitmq"
      ],
      "messageQueues": {
        "input": "architect_tasks",
        "output": "builder_tasks"
      }
    },
    "builder": {
      "workingDir": "./git-worktrees/builder",
      "allowedServers": [
        "filesystem",
        "vector-search",
        "knowledge-base",
        "git-mcp",
        "testing-tools",
        "coordination-hub",
        "github",
        "context7",
        "task-manager",
        "redis",
        "rabbitmq",
        "fetch"
      ],
      "messageQueues": {
        "input": "builder_tasks",
        "output": "validator_tasks"
      }
    },
    "validator": {
      "workingDir": "./git-worktrees/validator",
      "allowedServers": [
        "filesystem",
        "testing-tools",
        "fetch",
        "coordination-hub",
        "github",
        "task-manager",
        "redis",
        "rabbitmq",
        "sqlite"
      ],
      "messageQueues": {
        "input": "validator_tasks",
        "output": "admin_notifications"
      }
    }
  },
  "communication": {
    "protocol": "mcp",
    "messageFormat": {
      "from_agent": "string",
      "to_agent": "string",
      "task_id": "uuid",
      "action": "string",
      "payload": "object",
      "timestamp": "iso8601"
    },
    "taskStates": ["pending", "claimed", "in_progress", "completed", "failed", "blocked"],
    "priorities": ["low", "medium", "high", "critical"]
  },
  "debugging": {
    "logLevel": "info",
    "enableMCPDebug": true,
    "healthCheckInterval": 30000,
    "timeoutMs": 10000,
    "inspector": {
      "enabled": true,
      "port": 5173
    }
  },
  "monitoring": {
    "metricsEnabled": true,
    "dashboardPort": 8000,
    "endpoints": {
      "health": "/health",
      "metrics": "/metrics",
      "tasks": "/api/tasks",
      "agents": "/api/agents"
    }
  }
}